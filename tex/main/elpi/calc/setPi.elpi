

ofType (setPi B C) KIND3 IE
    :- (ofType B KIND1 IE)
    ,  (pi x\ locDecl x B
        => (ofType (C x) KIND2 IE))
    ,  spy(pts_fun KIND1 KIND2 KIND3)
    .

of (lambda B F) (setPi B C) IE
    :- spy (ofType B _ IE)
    ,  spy (pi x\ locDecl x B => isa (F x) (C x) IE)
    .

of (app Lam X) (CX) IE
    :- spy(of Lam (setPi B C) IE)
    ,  spy(isa X B IE)
    ,  CX = C X
    .


hstep (app LAM Bb) (F Bb)
    :- of LAM (setPi B C) IE
    ,  (ofType B _ IE)
    ,  (isa Bb B IE)
    ,  hnf LAM (lambda B' F)
    ,  conv B B'
    ,  (pi x\ locDecl x B => isa (F x) (C x) IE)
    ,  (pi x\ locDecl x B => ofType (C x) _ IE)
    .

dconv (setPi B C) (setPi B' C') 
    :- (conv B B')
    ,  (pi x\ locDecl x B => conv (C x) (C' x))
    .
dconv (app F X) (app F' X') 
    :- (conv F F')
    , (conv X X')
    .

dconv (lambda B F) (lambda B' F') 
    :- (conv B B')
    ,  pi x\  locDecl x B => (conv (F x) (F' x))
    .

interp (setPi B C) T 
    :- spy(interp B Bi)
    ,  spy(pi x\ pi xi\ locDecl x B 
        => locDecl xi Bi 
        => interp x xi 
        => interp (C x) (Ci xi))
    ,  spy(setoid_eq B EquB)
    ,  spy(pi x\ pi xi\ locDecl x B 
        => locDecl xi Bi 
        => interp x xi 
        => setoid_eq (C x) (EquC xi))
    ,  spy(pi x1 \ pi x2 \ pi h\
        pi x1i\ pi x2i\ pi hi\ locDecl x1 B 
        => locDecl x2 B
        => locDecl x1i Bi
        => locDecl x2i Bi
        => interp x1 x1i
        => interp x2 x2i
        => (locDecl h (propEq B x1 x2)) 
        => (locDecl hi (EquB x1i x2i))
        => interp h hi
        => spy(tau (C x1) (C x2) 
            (TauC x1i x2i hi)))
    ,  T = setSigma (setPi Bi Ci) f\ 
        (forall (Bi) x1\ 
        (forall Bi x2\ 
        (forall (EquB x1 x2) h\
        (EquC x2 
            (TauC x1 x2 h (app f x1)) 
            (app f x2)))))
    .


interp (app F X) R 
    :- spy(of F (setPi B C) ext)
    ,  spy(interp_isa X B Xi)
    ,  spy(interp F Fi)
    ,  spy(of Fi T int)
    ,  spy(T = (setSigma PI _))
    ,  R = (app 
        (elim_setSigma Fi (_\PI) (x\y\x) ) 
        Xi)
    .


interp (lambda B F) R                
    :- spy(of (lambda B F) (setPi B C) ext)
    ,  spy(interp (setPi B C) 
        (setSigma (setPi Bi Ci) H ))
    ,  macro_interp B 
        ( x\_\_\xi\_\_\ interp (F x) (Fi xi))
    ,  setoid_eq B EquB
    ,  macro_interp B 
        (x1\x2\h\x1i\x2i\hi\
            tau_proof_eq (F x1) (F x2) (C x2) 
                (K_EQU x1i x2i hi))
    ,  R = pair (setPi Bi Ci) (H) (lambda Bi Fi)
        (forall_lam Bi x1\ 
        forall_lam Bi x2\ 
        forall_lam (EquB x1 x2) h\
            K_EQU x1 x2 h)
    .


setoid_eq (setPi B C) P
    :- spy(interp B Bi)
    ,  spy(pi x\ pi xi\ locDecl x B 
        => locDecl xi Bi 
        => interp x xi 
        => interp (C x) (Ci xi))
    ,  spy(pi x\ pi xi\locDecl x B 
        => locDecl xi Bi
        => interp x xi
        => (interp (C x) (Ci xi)
            , setoid_eq (C x) (EquC xi)))
    ,  P = (f\ g\ 
        forall Bi x\ 
        EquC x 
        (app (elim_setSigma f 
            (_\setPi Bi Ci) (x\y\x) ) x) 
        (app (elim_setSigma g 
            (_\setPi Bi Ci) (x\y\x) ) x))
    .

tau_proof_eq (app F X1) (app F X2) T H 
    :- of F (setPi B T') ext
    ,  spy(tau_proof_eq X1 X2 B G)
    ,  spy(interp F Fi)
    ,  spy(of Fi (setSigma TyF MorF) int)
    ,  PI1 = (c\ elim_setSigma c 
        (_\ TyF) (x \ y\ x))
    ,  P2Fi = elim_setSigma Fi 
        (c \ MorF (PI1 c)) 
        (x\ y\ y)
    ,  spy(interp_isa X1 B X1i)
    ,  spy(interp_isa X2 B X2i)
    ,  spy(tau 
        (propEq (T' X2) (app F X1) (app F X2))
        (propEq (T) (app F X1) (app F X2)) 
        TAU)
    ,  H = TAU 
        (forall_app 
        (forall_app 
        (forall_app P2Fi X1i) X2i) G)
    . 

tau (setPi B C) (setPi B' C') P
    :- spy(interp (setPi B C) (setSigma T1 T2))
    ,  spy(T1 = setPi Bi Ci)
    ,  spy(interp (setPi B' C') (setSigma T1' T2'))
    ,  spy(T1' = setPi Bi' Ci')
    ,  spy(setoid_eq B' EquB')
    ,  spy(macro_interp B   
        (_\x2\_\_\x2i\_\ 
            setoid_eq (C x2) (EquC x2i)))
    ,  spy(tau B' B FB)
    ,  spy(macro_tau B B' 
        (x\x'\_\xi\xi'\_\ 
            tau (C x) (C' x') (FC' xi xi')))
    ,  spy(macro_interp B (x1\x2\_\x1i\x2i\_\ 
        tau (C x1) (C x2) (FCC x1i x2i)))
    ,  spy(tau_trasp B' B KB)
    ,  spy(macro_tau B B' x\x'\_\xi\xi'\hi\ 
        tau_trasp (C x) (C' x') (KC' xi xi' hi))
    ,  P = (w\ elim_setSigma w 
        (_\setSigma T1' T2') f\p\ 
        pair T1' T2'
        (lambda Bi' x\ FC' (FB x) x (app f (FB x)))
        (forall_lam Bi' y1'\ 
        forall_lam Bi' y2'\ 
        forall_lam (EquB' y1' y2') d'\
        KC' (FB y2') 
            y2' 
            d' 
            (FCC (FB y1') (FB y2') (app f (FB y1')))
            (app f (FB y2'))
            (forall_app
                (forall_app
                (forall_app p (FB y1'))
                (FB y2'))
                (KB y1' y2' d')))) 
    . 

tau_trasp (setPi B C) (setPi B' C') P 
    :- spy(macro_tau B B' x\x'\_\xi\xi'\hi\ 
        tau_trasp (C x) (C' x') (KC' xi xi' hi))
    ,  spy(tau B' B FB)
    ,  P = f\g\d\ forall_lam B' y'\ 
            KC' (FB y') 
                y'
                d
                (app f (FB y'))
                (app g (FB y'))
                (forall_app d (FB y'))
                
    .



