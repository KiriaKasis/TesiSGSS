% !TeX program = lualatex
% !TeX encoding = UTF-8
% !TeX root = ./thesis.tex

\section{The Interpretation}
	One of the main result of \cite{maietti2009minimalist} is a categorical proof of the validity of an interpretation of an extensional type theory into an intensional one. 
	
	In particular first a quotient model Q(mTT) is built on the theory mTT, this model is given as a category where objects are pairs of $(A, =_A )$ (abbreviated to $A_=$ when $=_A$ it is clear from the context) where A is an intensional type called {support} and \[ x =_A y \ props\ [x\in A,\ y \in A]\] is an equivalence relation on $A$; which means that there are terms $\s{rfl}_A$, $\s{symm}_A$ and $\s{tra}_A$ such that the following judgements hold in mTT
	\begin{align*}
	\s{rfl}_A(x) \in x& =_A x\ [x\in A]\\
	\s{sym}_A(x,y,u) \in y & =_A x\ [x\in A,\ y\in A,\ u \in x =_A y ]\\
	\s{tra}_A(x,y,z,u,v) \in x & = _A z\ [x \in A,\ y \in A,\ z \in A,\ u \in x =_A y, v \in y =_A z ]
	\end{align*}
	In the following we will refers to the objects of Q(mTT) as setoids.
	
	The morphisms of Q(mTT) from $(A,\ =_A)$ to $(B,\ =_B)$  are all the well-typed terms of mTT \[ f(x) \in B(x) \ [x\in A]\] that preserve the setoid equality, that is there exist a proof-term \[\s{pr_1}(x,y,z) \in f(x) =_B f(y)\ [x \in A,\ y \in A,\ z \in x =_A y ]\]
	Equality between two morphisms f,g : $(A,=_A ) \to (B,=_B )$ holds if they maps equal elements of $A_=$ to equal elements of $B_=$, that is if there is a proof-term \[\s{pr_2}(x) \in f(x) =_B g(x)\ [x \in A]\]
	
	Starting from the category Q(mTT) we can define also \emph{dependent setoids}, given a setoid $A_=$ we say that \[B_=(x)\ [x\in A_=] \]	 is a dependent setoid if its support is a dependent type \(B(x)\ type\ [x \in As]\), if its relation is a dependent proposition \[ y =_{B(x)} y'\ [x \in A,\ y \in B(x),\ y' \in B(x)]\] and if there is a substitution morphism \[\sigma^{x_2}_{x_1}(d,y)\in{}B(x_2)\ [x_1 \in A,\ x_2 \in A,\ d \in x_1 =_A x_2 ,\ y \in B(x_1)]\] that satisfies the properties given by definition 4.9 in \cite{maietti2009minimalist}, that is it needs to preserve the equality of $B_=$, to be proof-irrelevant by not depending on the particular choice of the proof-term $d\in x_1=x_2$ (so that we can write $\sigma^{x_2}_{x_1}(y)$ in place of $\sigma^{x_2}_{x_1}(d,y)$), there need to always exists the identity substitution
		\footnote{Which in general does not need to be the identity morphism, for example 
			\[\sigma^{x}_{x}(\s{rfl}_A(x),w) \equiv
			 \s{elim}_+(
			 	w
			 	,(z).\s{inl}(\sigma^{x}_{x}(\s{rfl}_A(x)(x),z))
			 	,(z).\s{inr}(\sigma^{x}_{x}(\s{rfl}_A(x)(x),z))
			 )
			\] if $w \in  B+C\ [x\in A]$
		}
	$\sigma^{x_1}_{x_1}(\s{rfl}_{B(x_1)}(x_1), \text\textendash)$ and lastly substitution morphisms need to be composable, that is we require \[\sigma^{x_3}_{x_2}(\sigma^{x_2}_{x_1}(y)) =_{B(x_3)} \sigma^{x_3}_{x_1}(y)\] in the appropriate context\footnote{It is worth noting that in the Minimalist Foundation the only type that directly takes terms as arguments are the propositional equalities (written $\s{Eq}$ and $\s{Id}$ in emTT and mTT respectively). For any $B(x)\ type\ [x\in A]$ the only possible occurrences of $x$ are as an argument of $\s{Eq}$ (resp.\ $\s{Id}$ if in mTT), together with the absence of strong elimination of terms towards types this means that conversion of types is always only reduced to conversion of terms and that types containing no propositions cannot be truly dependent. For example the canonical way to construct a type \emph{list of type $C$ of length $n$} is via a dependent sum $\Sigma(\s{List}(C),(l).P(l,n))$ where $P(l,n)$ is the proposition \emph{length of $l$ equals $n$}.}.
	
	Over these substitution we can define \emph{canonical isomorphism} between two type $B_1$ and $B_2$ as the only $\sigma$ between them. In our code we have implemented these isomorphisms as with the predicate \verb|tau B B' P|.

	The reason these construction are needed is because the strong elimination rule of the extensional propositional equality can derive a judgemental equality from just an hypothetical assumption. For an example we can see that a judgement like $\s{true} \in \s{Eq}(C,c,d)\ [c \in C, d\in C]$ is a well formed but not derivable judgement in emTT, but if we add one more assumption to the context we obtain \[\s{true} \in \s{Eq}(C+C,\s{inl}(c),\s{inl}(d))\ [c \in C, d\in C, h\in \s{Eq}(C,c,d)]\] which is derivable since we can use the rules $\s{prop-true}$ and {E-Eq} to derive the judgement $c\eg d\in C$ from the given context.
	
	This can be seen also in the fact that this judgement\begin{multline*}
		\forall_{x\in\singleton}\forall_{f\in\Pi(\s{Eq}(\singleton,x,\star),\singleton)}\s{Eq}(\singleton,\star,x)\Rightarrow\\ \s{Eq}(\singleton,\s{apply}(f,\s{eq}(\singleton,\star)),\s{apply}(f,\s{eq}(\singleton,\star)))\ \ props\footnote{$\s{eq}(A,a)$ is the proposed canonical constructor from our implementation that replaces $\s{true}$ in the introduction rule 
			\[
			\begin{prooftree}
			\hypo{\c\in{}C}
			\infer1{\s{true}\in\s{Eq}(C,c,c)}
			\end{prooftree}
			\]
		}
	\end{multline*}
	is derivable in the empty context even if there is a mismatch between the types of $f$ and $\s{eq}(\singleton,\star)$. Here for example we would want to apply a canonical isomorphism to $\trad{\s{eq}(\singleton,\star)}$\footnote{In this work we use the double bracket notation for the interpretation instead of the $\textendash^\text{I}$ used in \cite{maietti2009minimalist}} so that its type match with the domain of $\trad f$; after the correction we obtain $\s{apply}(f, \tau_{\trad{\s{Eq}(\singleton,\star,\star)}}^{\trad{\s{Eq}(\singleton,x,\star)}}(\trad{\s{eq}(\singleton,\star)}))$ which is well-typed in mTT 
	
	
	From this introduction to the structure of the interpretation we can see that the method used to force the semantics of emTT on mTT (via Q(mTT)) is to require the creation of suitable proof terms thus restricting the available language to a subset that preserve the extensional semantic. 
	
	We can se another more explicit application of this method in the interpretation of dependent products, indeed in this case  a function term of emTT is interpreted as a pair whose first projection is an intensional function and whose second projection is a proof that the first projection preserves the setoid equalities of Q(mTT).

	From the point of view of the implementation this means that we have to produce various proof for each of the type constructor we wish to include in our implementation.
	
	As of now we have implemented all that is needed to fully interpret the subset of emTT comprised of singletons, dependent products, implications, universal quantifications, propositional equality. We believe that this subset exhibit enough of the complexity of the interpretation and feel confident that the structure of our implementation will be able to cover also the needs of the remaining constructors. 
